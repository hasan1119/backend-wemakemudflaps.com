# ---------------------- Permission Types ----------------------

# Represents a full permission record stored in the database.
type Permissions {
  id: ID!
  name: PermissionName!
  description: String!
  canCreate: Boolean!
  canRead: Boolean!
  canUpdate: Boolean!
  canDelete: Boolean!
}

# Represents a cached permission in the user's session.
type PermissionSession @shareable {
  id: ID!
  name: String!
  description: String
  canCreate: Boolean!
  canRead: Boolean!
  canUpdate: Boolean!
  canDelete: Boolean!
}

# Represents a cached permission in a role's session data (stored in Redis).
type RolePermissionSession {
  id: ID!
  name: String!
  description: String
  canCreate: Boolean!
  canRead: Boolean!
  canUpdate: Boolean!
  canDelete: Boolean!
}

# ---------------------- Role Types ----------------------

# Represents a role in the system with its associated default permissions.
type Role {
  id: ID!
  name: String!
  description: String
  defaultPermissions: [RolePermissionSession!]
  systemDeleteProtection: Boolean # Prevents deletion via UI/API.
  systemUpdateProtection: Boolean # Prevents updates via UI/API.
  assignedUserCount: Int # Number of users currently assigned to this role.
  createdBy: CreatedBy # Metadata on who created the role.
  createdAt: String
  deletedAt: String
}

# Role session cache structure stored by ID or name in Redis.
type RoleSession {
  id: ID!
  name: String!
  description: String!
  defaultPermissions: [RolePermissionSession!]!
  systemDeleteProtection: Boolean!
  systemUpdateProtection: Boolean!
  createdBy: CreatedBy
  createdAt: String
  deletedAt: String
}

# ---------------------- Responses ----------------------
# Response when fetching only the permissions assigned to a user.
type PermissionsResponse {
  statusCode: Int!
  success: Boolean!
  message: String!
  permissions: [Permissions!]!
}

# Response combining personalized permissions (overrides) and default role-based permissions.
type PersonalizedWithRolePermissionResponse {
  statusCode: Int!
  success: Boolean!
  message: String!
  personalizedPermissions: [Permissions!]!
  rolePermissions: [Role!]
}

# Response when retrieving list of user roles.
type RolesResponse {
  statusCode: Int!
  success: Boolean!
  message: String!
  roles: [Role!]!
  total: Int!
}

# Single role fetch response.
type RoleResponse {
  statusCode: Int!
  success: Boolean!
  message: String!
  role: Role
}

# ---------------------- Inputs ----------------------

# Input to define a single permission, typically for mutation to assign to a user.
input SinglePermissionInput {
  name: PermissionName!
  canCreate: Boolean
  canRead: Boolean
  canUpdate: Boolean
  canDelete: Boolean
  description: String
}

# Input to update user's permissions explicitly.
input UpdateUserPermissionInput {
  userId: ID! # Target user ID.
  accessAll: Boolean # Grant access to all permissions.
  deniedAll: Boolean # Deny all permissions explicitly.
  permissions: [SinglePermissionInput!] # Detailed list of permissions to apply.
  password: String # Optional password for authorization (non-super admins).
}

# Input for assigning a permission to a role. Used in role management.
input RolePermissionInput {
  name: PermissionName! # Target entity/resource for the permission.
  description: String # Optional explanation of what the permission entails.
  canCreate: Boolean!
  canRead: Boolean!
  canUpdate: Boolean!
  canDelete: Boolean!
}

# Input used for assigning permission details against a role (usually for updates).
input PermissionAgainstRoleInput {
  name: String! # Name of the resource/module.
  description: String # Description of the permission.
  canCreate: Boolean!
  canRead: Boolean!
  canUpdate: Boolean!
  canDelete: Boolean!
}

# ---------------------- Unions ----------------------

# Union when fetching role by ID.
union GetRoleByIDResponseOrError = BaseResponse | RoleResponse | ErrorResponse

# Union for retrieving multiple roles.
union GetRolesResponseOrError = BaseResponse | RolesResponse | ErrorResponse

# Union when retrieving a single role.
union GetRoleResponseOrError = BaseResponse | RoleResponse | ErrorResponse

# Union for personalized permissions fetch query.
union GetPermissionsResponseOrError =
    BaseResponse
  | PersonalizedWithRolePermissionResponse
  | ErrorResponse

# Union when retrieving only user-specific permissions.
union GetPersonalizedPermissionsResponseOrError =
    BaseResponse
  | PermissionsResponse
  | ErrorResponse

# Union when creating a single role.
union CreateRoleResponseOrError = BaseResponse | RoleResponse | ErrorResponse

# Union when updating a single role.
union UpdateRoleResponseOrError = BaseResponse | RoleResponse | ErrorResponse

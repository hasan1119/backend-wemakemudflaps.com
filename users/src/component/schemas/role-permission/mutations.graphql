# Root Mutation type defining all user-related operations.
type Mutation {
  # Create a new role for users.
  # Only accessible by authorized users.
  # Optional system-level protection flags restrict updates/deletion.
  createUserRole(
    name: String! # Name of the role to create (must be unique).
    description: String # Optional description for the role.
    defaultPermissions: [RolePermissionInput!] # Permissions assigned by default.
    systemDeleteProtection: Boolean # If true, prevents soft delete except by Super Admin.
    systemUpdateProtection: Boolean # If true, prevents update except by Super Admin.
  ): CreateRoleResponseOrError!

  # Update the roles assigned to a specific user.
  # Only accessible by authorized users.
  # Can add or remove multiple roles. May require password for non-super admin.
  updateUserRole(
    roleAddIds: [String] # List of Role IDs to be added to the user.
    roleRemoveIds: [String] # List of Role IDs to be removed from the user.
    userId: String! # Target user's ID whose roles are being updated.
    password: String # Optional: password confirmation for non-super admins.
  ): BaseResponseOrError!

  # Soft delete one or more user roles.
  # Only accessible by authorized users.
  # If `skipTrash` is true, deletes permanently unless protected.
  deleteUserRole(
    ids: [ID!]! # List of Role IDs to be deleted.
    skipTrash: Boolean! # If true, permanently deletes instead of soft-deleting.
    password: String # Optional: required for non-super admins.
  ): BaseResponseOrError!

  # Restore previously soft-deleted user roles.
  # Only accessible by authorized users.
  restoreUserRole(
    ids: [ID!]! # List of soft-deleted role IDs to be restored.
  ): BaseResponseOrError!

  # Update an existing user role's information.
  # Only accessible by authorized users.
  # Allows updating role name, description, permissions, or system-level flags.
  # Requires the role ID and may require password for non-super admins.
  updateUserRoleInfo(
    id: ID! # Unique ID of the role to update.
    name: String # New name for the role.
    description: String # New description for the role.
    defaultPermissions: [RolePermissionInput!] # Updated list of default permissions.
    systemDeleteProtection: Boolean # Update soft delete protection flag.
    systemUpdateProtection: Boolean # Update edit protection flag.
    password: String # Optional: required for non-super admins.
  ): UpdateRoleResponseOrError!

  # Update a user's permissions manually.
  # Only accessible by authorized users.
  # Only available to admins or super admins to override role-based access control.
  updateUserPermission(
    input: UpdateUserPermissionInput! # Input object containing permission updates.
  ): BaseResponseOrError!
}

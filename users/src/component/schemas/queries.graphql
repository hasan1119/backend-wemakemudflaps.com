# Queries to fetch users from the system.
type Query {
  # Fetch own profile.
  # This query allows you to retrieve the details of your own profile data.
  # The response will include a `GetProfileResponseOrError` containing user data, and status.
  getProfile: GetProfileResponseOrError!

  # Fetch user details by user id.
  # This query allows you to retrieve the details of requested user's data.
  # The response will include a `GetUserByIDResponseOrError` containing user data, and status.
  getUserById(id: String!): GetUserByIDResponseOrError!

  # Fetch all users with pagination and optional search.
  # This query allows you to fetch a list of all users.
  # You can paginate the results by specifying the `pageNo` and `showPerPage`.
  # You can also filter the users by a `searchKeyWord` (e.g., searching by name or email).
  # If no `searchKeyWord` is provided, it returns all users.
  # The response will include a `GetUsersResponseOrError` containing users data, and status.
  getAllUsers(
    page: Int! # The page number to fetch (for pagination).
    limit: Int! # The number of users to display per page (for pagination).
    search: String # Optional search term to filter users (can be by name, email, etc.).
    sortBy: String # Optional field to sort by (e.g., name, createdAt).
    sortOrder: String # Optional sort order (asc or desc).
  ): GetUsersResponseOrError!

  # Fetch all user role info.
  # This query allows you to retrieve all the user roles.
  # The response will include a `GetRoleByIDResponseOrError` containing a single user role info, and status.
  getRoleById(id: String!): GetRoleByIDResponseOrError!

  # Fetch all user roles with pagination, optional search, and sorting.
  # This query allows you to fetch a list of all user roles.
  # You can paginate the results by specifying the `page` and `limit`.
  # You can filter roles by a `search` term (case-insensitive, matching name or description).
  # You can sort results by `sortBy` (e.g., name, createdAt) and `sortOrder` (asc or desc).
  # If no `search` is provided, it returns all non-deleted roles.
  # If no `sortBy` or `sortOrder` is provided, it defaults to sorting by createdAt in descending order.
  # The response will include a `GetRolesResponseOrError` containing role data and status.
  getAllRoles(
    page: Int! # The page number to fetch (1-based, for pagination).
    limit: Int! # The number of roles to display per page (for pagination).
    search: String # Optional search term to filter roles (by name or description).
    sortBy: String # Optional field to sort by (e.g., name, createdAt).
    sortOrder: String # Optional sort order (asc or desc).
  ): GetRolesResponseOrError!
}
